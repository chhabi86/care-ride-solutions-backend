name: Backend Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'pom.xml'
      - 'src/**'
      - 'nginx/**'
      - 'deploy/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (branch, tag, or commit) to deploy'
        required: false
        default: 'main'
      run_healthcheck:
        type: boolean
        required: false
        default: true
        description: 'Run post-deploy healthcheck'

concurrency:
  group: backend-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    env:
      DOMAIN: ${{ secrets.DOMAIN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.ref || 'main' }}

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Known Hosts (Optional Strict)
        run: |
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Sync Repo to Remote
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "set -euo pipefail; if [ ! -d /opt/backend ]; then sudo mkdir -p /opt/backend; sudo chown ${{ secrets.DEPLOY_USER }} /opt/backend; fi"
          rsync -az --delete --exclude 'target/' ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/backend/repo/

      - name: Remote Build & Restart
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "set -euo pipefail; cd /opt/backend/repo; if [ -x ./mvnw ]; then ./mvnw -q clean package -DskipTests || mvn -q clean package -DskipTests; else mvn -q clean package -DskipTests; fi; cp target/*.war /opt/backend/app.war; sudo systemctl restart care-ride-backend"

      - name: Deploy Nginx Config & Reload
        run: |
          # copy nginx config (includes fix to preserve /api prefix)
          rsync -az nginx/care-ride.conf ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/tmp/care-ride.conf
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "set -euo pipefail; sudo mv /tmp/care-ride.conf /etc/nginx/sites-available/care-ride.conf; sudo nginx -t; sudo systemctl reload nginx"

      - name: Post-Deploy Healthcheck
        if: inputs.run_healthcheck == true
        run: |
          D=${DOMAIN:-careridesolutionsspa.com}
          for i in {1..15}; do
            STATUS=$(curl -fsS -o /dev/null -w '%{http_code}' https://$D/actuator/health || true)
            if [ "$STATUS" != "200" ]; then
              STATUS=$(curl -fsS -o /dev/null -w '%{http_code}' https://$D/api/actuator/health || true)
            fi
            if [ "$STATUS" = "200" ]; then echo "Healthy (200)"; exit 0; fi
            echo "Attempt $i: status=$STATUS"; sleep 4;
          done; echo "Healthcheck failed"; exit 1

      - name: Summary
        if: always()
        run: |
          echo "### Backend Deploy" >> $GITHUB_STEP_SUMMARY
          echo "Ref: ${{ inputs.ref }}" >> $GITHUB_STEP_SUMMARY
